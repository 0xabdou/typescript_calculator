{"version":3,"sources":["calculator/Button.tsx","calculator/Calculator.tsx","calculator/Credits.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","className","id","onClick","value","isOperator","indexOf","isNumber","test","Calculator","useState","total","setTotal","current","setCurrent","timer","setTimer","error","setError","reset","setReset","length","err","clearTimeout","newTimer","setTimeout","displayError","last","slice","OGExpr","expr","replace","result","evaluate","hasError","actualTotal","replaceAll","Credits","href","target","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","setDimensions","doc","documentElement","appHeight","window","innerHeight","appWidth","innerWidth","style","setProperty","addEventListener"],"mappings":"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","file":"static/js/main.a355a108.chunk.js","sourcesContent":["import './Button.scss';\n\ntype ButtonProps = {\n  className: string,\n  id: string,\n  value: string,\n  onClick: (value: string) => void,\n};\nconst Button = (props: ButtonProps) => {\n  return (\n    <button className={props.className} id={props.id} onClick={() => props.onClick(props.value)}>\n      {props.value}\n    </button>\n  );\n};\n\nexport default Button;","import './Calculator.scss';\nimport Button from \"./Button\";\nimport {useState} from \"react\";\nimport {evaluate} from 'mathjs';\n\n\nconst isOperator = (value: string): boolean => {\n  const numbers = ['/', 'X', '-', '+'];\n  return numbers.indexOf(value) !== -1;\n};\n\nconst isNumber = (value: string): boolean => {\n  return /^\\d$/.test(value);\n};\n\nconst Calculator = () => {\n  const [total, setTotal] = useState('');\n  const [current, setCurrent] = useState('0');\n  const [timer, setTimer] = useState<NodeJS.Timeout>();\n  const [error, setError] = useState('');\n  const [reset, setReset] = useState(true);\n\n  const displayError = (err: string) => {\n    setError(err);\n    if (timer) {\n      clearTimeout(timer);\n    }\n    const newTimer = setTimeout(() => {\n      setError('');\n    }, 1500);\n    setTimer(newTimer);\n  };\n\n  const onClick = (value: string) => {\n    setReset(false);\n    if (total.indexOf('=') !== -1) {\n      if (value === 'AC') {\n        setTotal('');\n        setCurrent('0');\n        setReset(true);\n      } else if (value === '=') {\n        setTotal(`${current}=`);\n      } else if (isOperator(value)) {\n        setTotal(current);\n        setCurrent(value);\n      } else if (value === '.') {\n        setTotal('');\n        setCurrent('0.');\n      } else {\n        setTotal('');\n        setCurrent(value);\n      }\n      return;\n    }\n\n    if (isNumber(value) || value === '.') {\n      if (current.length >= 22) {\n        displayError('DIGIT LIMIT MET');\n        return;\n      }\n    }\n\n    if (isOperator(value)) {\n      const last = total[total.length - 1];\n      if (!isOperator(current)) {\n        setTotal(total + current);\n      } else if (value === '-' && !isOperator(last)) {\n        setTotal(total + current);\n      } else if (value !== '-' && isOperator(last)) {\n        setTotal(total.slice(0, total.length - 1));\n      }\n      setCurrent(value);\n    } else if (isNumber(value)) {\n      if (isOperator(current)) {\n        setTotal(total + current);\n        setCurrent(value);\n      } else {\n        if (current === '0') {\n          setCurrent(value);\n        } else\n          setCurrent(current + value);\n      }\n    } else if (value === '.') {\n      if (isOperator(current)) {\n        setTotal(total + current);\n        setCurrent('0.');\n      } else if (current.indexOf('.') === -1) {\n        setCurrent(current + '.');\n      }\n    } else if (value === 'AC') {\n      setReset(true);\n      setTotal('');\n      setCurrent('0');\n    } else if (value === '=') {\n      let OGExpr = total + current;\n      if (isOperator(OGExpr[OGExpr.length - 1])) {\n        OGExpr = OGExpr.slice(0, OGExpr.length - 1);\n      }\n      let expr = (OGExpr).replace('X', '*');\n      if (expr[expr.length - 1] === '.') {\n        expr = expr + '0';\n      }\n      let result = evaluate(expr);\n      setTotal(OGExpr + '=');\n      setCurrent(`${result}`);\n    }\n  };\n\n  const hasError = error.length !== 0;\n  const actualTotal = (total + current).replaceAll('X', 'â‹…');\n  return (\n    <div className='Calculator'>\n      <div id='screen'>\n        <div id='total'>{reset ? '' : actualTotal}</div>\n        <div id='display'>{hasError ? error : current}</div>\n      </div>\n      <Button id='clear' className='' value='AC' onClick={onClick}/>\n      <Button className='operator' id='divide' value='/' onClick={onClick}/>\n      <Button className='operator' id='multiply' value='X' onClick={onClick}/>\n      <Button id='equals' className='' value='=' onClick={onClick}/>\n      <Button className='number' id='seven' value='7' onClick={onClick}/>\n      <Button className='number' id='eight' value='8' onClick={onClick}/>\n      <Button className='number' id='nine' value='9' onClick={onClick}/>\n      <Button className='operator' id='subtract' value='-' onClick={onClick}/>\n      <Button className='number' id='four' value='4' onClick={onClick}/>\n      <Button className='number' id='five' value='5' onClick={onClick}/>\n      <Button className='number' id='six' value='6' onClick={onClick}/>\n      <Button className='operator' id='add' value='+' onClick={onClick}/>\n      <Button className='number' id='one' value='1' onClick={onClick}/>\n      <Button className='number' id='two' value='2' onClick={onClick}/>\n      <Button className='number' id='three' value='3' onClick={onClick}/>\n      <Button className='number' id='zero' value='0' onClick={onClick}/>\n      <Button className='number' id=\"decimal\" value='.' onClick={onClick}/>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import './Credits.scss';\n\nconst Credits = () => {\n  return (\n    <div id='credits'>\n      <p className='unselectable'>Built By</p>\n      <a\n        className='unselectable'\n        id='built-by'\n        href='https://twitter.com/AbdouOuahib'\n        target='_blank'\n        rel='noreferrer'>\n        Abdou Ouahib\n      </a>\n    </div>\n  );\n};\n\nexport default Credits;","import React from 'react';\nimport './App.css';\nimport Calculator from \"../calculator/Calculator\";\nimport Credits from \"../calculator/Credits\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n      <Credits />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst setDimensions = () => {\n  const doc = document.documentElement;\n  const appHeight = window.innerHeight;\n  const appWidth = window.innerWidth;\n  doc.style.setProperty('--app-height', `${appHeight}px`);\n  doc.style.setProperty('--app-width', `${appWidth}px`);\n};\n\nwindow.addEventListener('resize', setDimensions);\n\nsetDimensions();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}